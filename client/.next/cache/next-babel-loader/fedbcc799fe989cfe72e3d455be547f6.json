{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/feroz/Desktop/react-project/client/pages/user/[username]/edit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Router, { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(false),\n      dialogMsg = _useState[0],\n      setDailogState = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      seterror = _useState2[1];\n\n  var _useState3 = useState(data.name || ''),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(data.username),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(data.email),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(data.phone),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  function editData(_x) {\n    return _editData.apply(this, arguments);\n  }\n\n  function _editData() {\n    _editData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              axios({\n                method: 'patch',\n                url: 'http://localhost:4000/update/updateData',\n                data: {\n                  data: data\n                }\n              }).then(function (response) {\n                seterror(response.data.message);\n                console.log(response);\n\n                if (response.data.message == 'Data Updated') {\n                  Router.push('/');\n                }\n\n                setDailogState(true);\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n              setDailogState(false);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _editData.apply(this, arguments);\n  }\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (name !== '' && username !== '' && email !== '' && phone !== '') {\n                editData({\n                  username: data.username,\n                  newName: name,\n                  newUsername: username,\n                  newEmail: email,\n                  newPhone: phone\n                });\n                setDailogState(false);\n              } else {\n                if (name == '') {\n                  seterror(\"Name Feild Are Empty\");\n                }\n\n                if (email == '') {\n                  seterror(\"Email field are empty\");\n                }\n\n                if (phone == '') {\n                  seterror(\"phone field are empty\");\n                }\n\n                if (username == '') {\n                  seterror(\"username field are empty\");\n                }\n\n                setDailogState(true);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jumbotron jumbotron-fluid dark justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"container justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Edit User\"), dialogMsg === true ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, error) : null, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    type: \"email\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    defaultValue: data.email,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    defaultValue: data.name,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"username\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setUsername(event.target.value);\n    },\n    defaultValue: data.username,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setPhone(event.target.value);\n    },\n    defaultValue: data.phone,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })), __jsx(\"button\", {\n    onClick: sendData,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Edit\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 44\n    }\n  }, \"Back to list\")))))));\n};\n\n_s(Edit, \"vdiGv3CYNZWn532ubXqmyY7b5fQ=\");\n\n_c = Edit;\nexport var __N_SSP = true;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/home/feroz/Desktop/react-project/client/pages/user/[username]/edit.js"],"names":["Link","Layout","Router","useRouter","useState","axios","Edit","data","dialogMsg","setDailogState","error","seterror","name","setName","username","setUsername","email","setEmail","phone","setPhone","editData","method","url","then","response","message","console","log","push","err","sendData","newName","newUsername","newEmail","newPhone","event","target","value"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Router, { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nconst Edit = ({ data }) => {\n\n    const [dialogMsg, setDailogState] = useState(false);\n    const [error, seterror] = useState('');\n    const [name, setName] = useState(data.name || '');\n    const [username, setUsername] = useState(data.username);\n    const [email, setEmail] = useState(data.email);\n    const [phone, setPhone] = useState(data.phone);\n\n\n    async function editData(data) {\n        axios({\n            method: 'patch',\n            url: 'http://localhost:4000/update/updateData',\n            data: {\n                data\n            }\n        }).then((response) => {\n            seterror(response.data.message);\n            console.log(response);\n            if (response.data.message == 'Data Updated') {\n                Router.push('/')\n            }\n            setDailogState(true);\n        }).catch((err) => {\n            console.log(err);\n        });\n        setDailogState(false);\n    }\n\n    const sendData = async () => {\n        if (name !== '' && username !== '' && email !== '' && phone !== '') {\n\n            editData({\n                username: data.username,\n                newName: name,\n                newUsername: username,\n                newEmail: email,\n                newPhone: phone\n            });\n            setDailogState(false);\n        } else {\n            if (name == '') {\n                seterror(\"Name Feild Are Empty\");\n            }\n            if (email == '') {\n                seterror(\"Email field are empty\")\n            }\n            if (phone == '') {\n                seterror(\"phone field are empty\")\n            }\n            if (username == '') {\n                seterror(\"username field are empty\")\n            }\n            setDailogState(true);\n        }\n    }\n\n    return (\n        <Layout>\n            <div className=\"container\">\n                <div className=\"jumbotron jumbotron-fluid dark justify-content-center\">\n                    <div className=\"container justify-content-center\">\n                        <h1 className=\"display-4 justify-content-center\">Edit User</h1>\n                        {\n                            dialogMsg === true ?\n                                <div className=\"alert alert-danger\" role=\"alert\">{error}</div>\n                                : null\n                        }\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" onChange={(event) => setEmail(event.target.value)} defaultValue={data.email} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" onChange={(event) => setName(event.target.value)} defaultValue={data.name} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>username</label>\n                                <input type=\"text\" onChange={(event) => setUsername(event.target.value)} defaultValue={data.username} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Phone Number</label>\n                                <input type=\"text\" onChange={(event) => setPhone(event.target.value)} defaultValue={data.phone} className=\"form-control\" />\n                            </div>\n                            <button onClick={sendData} type=\"button\" className=\"btn btn-primary\">Edit</button>\n                            <br />\n                            <br />\n                            <Link href=\"/\"><a>Back to list</a></Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n};\n\nexport async function getServerSideProps({ query }) {\n    const id = await query;\n    const res = await fetch('http://localhost:4000/post/findData', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({ username: id.username })\n    });\n    const data = await res.json();\n    return { props: { data } }\n\n\n}\nexport default Edit;"]},"metadata":{},"sourceType":"module"}