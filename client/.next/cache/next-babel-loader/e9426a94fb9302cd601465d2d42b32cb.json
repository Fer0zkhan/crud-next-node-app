{"ast":null,"code":"var _jsxFileName = \"/home/feroz/Desktop/react-project/client/pages/user/[username]/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Router, { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nconst Edit = ({\n  data\n}) => {\n  const {\n    0: dialogMsg,\n    1: setDailogState\n  } = useState(false);\n  const {\n    0: error,\n    1: seterror\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState(data.name || '');\n  const {\n    0: username,\n    1: setUsername\n  } = useState(data.username);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(data.email);\n  const {\n    0: phone,\n    1: setPhone\n  } = useState(data.phone);\n\n  async function editData(data) {\n    axios({\n      method: 'patch',\n      url: 'http://localhost:4000/update/updateData',\n      data: {\n        data\n      }\n    }).then(response => {\n      seterror(response.data.message);\n      console.log(response);\n\n      if (response.data.message == 'Data Updated') {\n        Router.push('/');\n      }\n\n      setDailogState(true);\n    }).catch(err => {\n      console.log(err);\n    });\n    setDailogState(false);\n  }\n\n  const sendData = async () => {\n    if (name !== '' && username !== '' && email !== '' && phone !== '') {\n      editData({\n        username: data.username,\n        newName: name,\n        newUsername: username,\n        newEmail: email,\n        newPhone: phone\n      });\n      setDailogState(false);\n    } else {\n      if (name == '') {\n        seterror(\"Name Feild Are Empty\");\n      }\n\n      if (email == '') {\n        seterror(\"Email field are empty\");\n      }\n\n      if (phone == '') {\n        seterror(\"phone field are empty\");\n      }\n\n      if (username == '') {\n        seterror(\"username field are empty\");\n      }\n\n      setDailogState(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jumbotron jumbotron-fluid dark justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"container justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Edit User\"), dialogMsg === true ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, error) : null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    type: \"email\",\n    onChange: event => setEmail(event.target.value),\n    defaultValue: data.email,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: event => setName(event.target.value),\n    defaultValue: data.name,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"username\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: event => setUsername(event.target.value),\n    defaultValue: data.username,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: event => setPhone(event.target.value),\n    defaultValue: data.phone,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })), __jsx(\"button\", {\n    onClick: sendData,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Edit\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 44\n    }\n  }, \"Back to list\")))))));\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  const id = await query;\n  const res = await fetch('http://localhost:4000/post/findData', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify({\n      username: id.username\n    })\n  });\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Edit;","map":{"version":3,"sources":["/home/feroz/Desktop/react-project/client/pages/user/[username]/edit.js"],"names":["Link","Layout","Router","useRouter","useState","axios","Edit","data","dialogMsg","setDailogState","error","seterror","name","setName","username","setUsername","email","setEmail","phone","setPhone","editData","method","url","then","response","message","console","log","push","catch","err","sendData","newName","newUsername","newEmail","newPhone","event","target","value","getServerSideProps","query","id","res","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","props"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../../components/Layout';\nimport Router, { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nconst Edit = ({ data }) => {\n\n    const [dialogMsg, setDailogState] = useState(false);\n    const [error, seterror] = useState('');\n    const [name, setName] = useState(data.name || '');\n    const [username, setUsername] = useState(data.username);\n    const [email, setEmail] = useState(data.email);\n    const [phone, setPhone] = useState(data.phone);\n\n\n    async function editData(data) {\n        axios({\n            method: 'patch',\n            url: 'http://localhost:4000/update/updateData',\n            data: {\n                data\n            }\n        }).then((response) => {\n            seterror(response.data.message);\n            console.log(response);\n            if (response.data.message == 'Data Updated') {\n                Router.push('/')\n            }\n            setDailogState(true);\n        }).catch((err) => {\n            console.log(err);\n        });\n        setDailogState(false);\n    }\n\n    const sendData = async () => {\n        if (name !== '' && username !== '' && email !== '' && phone !== '') {\n\n            editData({\n                username: data.username,\n                newName: name,\n                newUsername: username,\n                newEmail: email,\n                newPhone: phone\n            });\n            setDailogState(false);\n        } else {\n            if (name == '') {\n                seterror(\"Name Feild Are Empty\");\n            }\n            if (email == '') {\n                seterror(\"Email field are empty\")\n            }\n            if (phone == '') {\n                seterror(\"phone field are empty\")\n            }\n            if (username == '') {\n                seterror(\"username field are empty\")\n            }\n            setDailogState(true);\n        }\n    }\n\n    return (\n        <Layout>\n            <div className=\"container\">\n                <div className=\"jumbotron jumbotron-fluid dark justify-content-center\">\n                    <div className=\"container justify-content-center\">\n                        <h1 className=\"display-4 justify-content-center\">Edit User</h1>\n                        {\n                            dialogMsg === true ?\n                                <div className=\"alert alert-danger\" role=\"alert\">{error}</div>\n                                : null\n                        }\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" onChange={(event) => setEmail(event.target.value)} defaultValue={data.email} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" onChange={(event) => setName(event.target.value)} defaultValue={data.name} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>username</label>\n                                <input type=\"text\" onChange={(event) => setUsername(event.target.value)} defaultValue={data.username} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Phone Number</label>\n                                <input type=\"text\" onChange={(event) => setPhone(event.target.value)} defaultValue={data.phone} className=\"form-control\" />\n                            </div>\n                            <button onClick={sendData} type=\"button\" className=\"btn btn-primary\">Edit</button>\n                            <br />\n                            <br />\n                            <Link href=\"/\"><a>Back to list</a></Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n};\n\nexport async function getServerSideProps({ query }) {\n    const id = await query;\n    const res = await fetch('http://localhost:4000/post/findData', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({ username: id.username })\n    });\n    const data = await res.json();\n    return { props: { data } }\n\n\n}\nexport default Edit;"]},"metadata":{},"sourceType":"module"}