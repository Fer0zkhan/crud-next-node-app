{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/feroz/Desktop/react-project/client/pages/add.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Router, { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar Add = function Add() {\n  _s();\n\n  var _useState = useState(false),\n      dialogMsg = _useState[0],\n      setDailogState = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      seterror = _useState2[1];\n\n  var _useState3 = useState(''),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(''),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(''),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  function postData(_x) {\n    return _postData.apply(this, arguments);\n  }\n\n  function _postData() {\n    _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              axios({\n                method: 'post',\n                url: 'http://localhost:4000/post/postData',\n                data: {\n                  data: data\n                }\n              }).then(function (response) {\n                seterror(response.data.message);\n                console.log(response);\n                setDailogState(true);\n\n                if (response.data.message == 'Data Save') {\n                  Router.push('/');\n                }\n\n                clearData();\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n              setDailogState(false);\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _postData.apply(this, arguments);\n  }\n\n  var clearData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setName('');\n              setUsername('');\n              setEmail('');\n              setPhone('');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function clearData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (name !== '' && username !== '' && email !== '' && phone !== '') {\n                postData({\n                  name: name,\n                  username: username,\n                  email: email,\n                  phone: phone\n                });\n                setDailogState(false);\n              } else {\n                if (name == '') {\n                  seterror(\"Name Feild Are Empty\");\n                }\n\n                if (email == '') {\n                  seterror(\"Email field are empty\");\n                }\n\n                if (phone == '') {\n                  seterror(\"phone field are empty\");\n                }\n\n                if (username == '') {\n                  seterror(\"username field are empty\");\n                }\n\n                setDailogState(true);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jumbotron jumbotron-fluid dark justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"container justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Add New User\"), dialogMsg === true ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, error) : null, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    type: \"email\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    value: email,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    value: name,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"username\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setUsername(event.target.value);\n    },\n    value: username,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(event) {\n      return setPhone(event.target.value);\n    },\n    value: phone,\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  })), __jsx(\"button\", {\n    onClick: sendData,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Add\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 44\n    }\n  }, \"Back to list\")))))));\n};\n\n_s(Add, \"RlxuANPJFW4t3A5pets9Y5aiLkg=\");\n\n_c = Add;\nexport default Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["/home/feroz/Desktop/react-project/client/pages/add.js"],"names":["Layout","useState","axios","Router","useRouter","Link","Add","dialogMsg","setDailogState","error","seterror","name","setName","username","setUsername","email","setEmail","phone","setPhone","postData","data","method","url","then","response","message","console","log","push","clearData","sendData","event","target","value"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Router, { useRouter } from 'next/router';\nimport Link from 'next/link';\n\n\nconst Add = () => {\n\n    const [dialogMsg, setDailogState] = useState(false);\n    const [error, seterror] = useState('');\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n\n    async function postData(data) {\n        axios({\n            method: 'post',\n            url: 'http://localhost:4000/post/postData',\n            data: {\n                data\n            }\n        }).then((response) => {\n            seterror(response.data.message);\n            console.log(response);\n            setDailogState(true);\n            if (response.data.message == 'Data Save') {\n                Router.push('/');\n            }\n            clearData();\n        }).catch((error) => {\n            console.log(error);\n        });\n        setDailogState(false);\n    }\n\n    const clearData = async () => {\n        setName('');\n        setUsername('');\n        setEmail('');\n        setPhone('');\n    }\n\n    const sendData = async () => {\n\n        if (name !== '' && username !== '' && email !== '' && phone !== '') {\n            postData({\n                name: name,\n                username: username,\n                email: email,\n                phone: phone\n            });\n            setDailogState(false);\n        } else {\n            if (name == '') {\n                seterror(\"Name Feild Are Empty\");\n            }\n            if (email == '') {\n                seterror(\"Email field are empty\")\n            }\n            if (phone == '') {\n                seterror(\"phone field are empty\")\n            }\n            if (username == '') {\n                seterror(\"username field are empty\")\n            }\n            setDailogState(true);\n        }\n    }\n\n    return (\n        <Layout>\n            <div className=\"container\">\n                <div className=\"jumbotron jumbotron-fluid dark justify-content-center\">\n                    <div className=\"container justify-content-center\">\n                        <h1 className=\"display-4 justify-content-center\">Add New User</h1>\n                        {\n                            dialogMsg === true ?\n                                <div className=\"alert alert-danger\" role=\"alert\">{error}</div>\n                                : null\n                        }\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input type=\"email\" onChange={(event) => setEmail(event.target.value)} value={email} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" onChange={(event) => setName(event.target.value)} value={name} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>username</label>\n                                <input type=\"text\" onChange={(event) => setUsername(event.target.value)} value={username} className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Phone Number</label>\n                                <input type=\"text\" onChange={(event) => setPhone(event.target.value)} value={phone} className=\"form-control\" />\n                            </div>\n\n                            <button onClick={sendData} type=\"button\" className=\"btn btn-primary\">Add</button>\n                            <br />\n                            <br />\n                            <Link href=\"/\"><a>Back to list</a></Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n};\n\n\nexport default Add;"]},"metadata":{},"sourceType":"module"}